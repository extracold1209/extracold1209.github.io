{"version":3,"sources":["webpack:///./src/components/ShareBox/index.tsx","webpack:///./src/components/Card/index.tsx","webpack:///./src/templates/index.tsx"],"names":["CommentButton","className","style","lineHeight","color","paddingLeft","href","onClick","ReactGA","event","category","action","icon","ShareBox","url","hasCommentBox","CardHeader","image","backgroundColor","to","backgroundSize","backgroundImage","Card","title","date","headerImage","headerBackgroundColor","description","tags","split","map","name","key","NavLinkText","text","NavLink","test","Page","pageContext","location","group","index","first","last","pathPrefix","previousUrl","nextUrl","marginTop","node","frontmatter","slug","fields","justifyContent","marginBottom"],"mappings":"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","file":"component---src-templates-index-tsx-d43e5ba7a803c50906f8.js","sourcesContent":["import React from 'react';\n\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './index.scss';\n\ninterface IProps {\n    url: string;\n    hasCommentBox?: boolean;\n}\n\nconst CommentButton: React.FC = () => (\n    <a\n        className=\"share-button\"\n        style={{\n            lineHeight: '1.7rem',\n            color: '#337ab7',\n            paddingLeft: '0.15rem',\n        }}\n        href=\"#gitalk-container\"\n        onClick={() =>\n            ReactGA.event({\n                category: 'User',\n                action: 'Goto Comment Box',\n            })\n        }\n    >\n        <FontAwesomeIcon icon={['far', 'comment']}/>\n    </a>\n);\n\nconst ShareBox: React.FC<IProps> = ({ url, hasCommentBox = true }) => (\n    <div className=\"m-share-box\">\n        {hasCommentBox && <CommentButton/>}\n        <a\n            className=\"share-button\"\n            href=\"#header\"\n            onClick={() => {\n                ReactGA.event({\n                    category: 'User',\n                    action: 'Scroll to Top',\n                });\n            }}\n            style={{\n                lineHeight: '1.7rem',\n                paddingLeft: '0.1rem',\n            }}\n        >\n            <FontAwesomeIcon icon={['fas', 'chevron-up']}/>\n        </a>\n    </div>\n);\n\nexport default ShareBox;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Tag from '../Tag';\n\nimport './index.scss';\n\ninterface IProps {\n  title: string;\n  date: string;\n  url: string\n  headerImage?: string\n  headerBackgroundColor?: string;\n  description?: string;\n  tags?: string[];\n}\n\nconst CardHeader: React.FC<{url: string, image: string; backgroundColor: string}> = ({ url, image, backgroundColor }) => (\n  <Link to={url}>\n    <div className=\"wrapper\" style={{\n      backgroundSize: 'cover',\n      backgroundColor: `#${backgroundColor}`,\n      backgroundImage: `url(${image})`,\n    }}/>\n  </Link>\n);\n\nconst Card: React.FC<IProps> = ({\n  title,\n  date,\n  url,\n  headerImage,\n  headerBackgroundColor,\n  description,\n  tags = [],\n}) => (\n  <div className=\"col-sm-12 pb-4\">\n    <div className=\"custom-card\">\n      {headerImage && (\n        <CardHeader\n          url={url}\n          image={headerImage}\n          backgroundColor={headerBackgroundColor || 'FFFFFF'}\n        />\n      )}\n      <div className=\"data\">\n        <div className=\"content\">\n          <div className=\"stats\">\n            <span className=\"date\">{date.split('T')[0]}</span>\n            {tags.map((name: string) => (\n              <Tag name={name} key={name}/>\n            ))}\n          </div>\n          <Link to={url}>\n            <h4 className=\"title\">{title}</h4>\n            <p>{description}</p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Link from 'gatsby-link';\n\nimport Card from '../components/Card';\nimport Sidebar from '../components/Sidebar';\nimport ShareBox from '../components/ShareBox';\n\nimport './index.scss';\n\nconst NavLinkText: React.FC<{ color: string; text: string }> = ({ color, text }) => (\n    <div\n        className=\"navlink\"\n        style={{\n            color,\n        }}\n    >\n        {text}\n    </div>\n);\n\nconst NavLink: React.FC<{ test: boolean; url: string; text: string }> = ({ test, url, text }) => {\n    if (!test) {\n        return <NavLinkText color=\"#7d7d7d\" text={text}/>;\n    }\n\n    return (\n        <Link to={`${url}`}>\n            <NavLinkText color=\"#66ccff\" text={text}/>\n        </Link>\n    );\n};\n\nconst Page: React.FC<{ pageContext: any; location: Location }> = ({ pageContext, location }) => {\n    const {\n        group, index, first, last, pathPrefix,\n    } = pageContext;\n\n    const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\n    const nextUrl = `/${pathPrefix}/${index + 1}`;\n\n    return (\n        <>\n            <div\n                className=\"row homepage\"\n                style={{\n                    marginTop: 20,\n                }}\n            >\n                <Sidebar/>\n                <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\n                    {group.map(({ node }: { node: any }) => (\n                        <Card\n                            url={node.frontmatter.slug ? node.frontmatter.slug : node.fields.slug}\n                            key={node.fields.slug}\n                            {...node.frontmatter}\n                        />\n                    ))}\n\n                    <div\n                        className=\"row\"\n                        style={{\n                            justifyContent: 'space-around',\n                            marginBottom: '20px',\n                        }}\n                    >\n                        <div className=\"previousLink\">\n                            <NavLink test={!first} url={previousUrl} text=\"Previous\"/>\n                        </div>\n                        <div className=\"nextLink\">\n                            <NavLink test={!last} url={nextUrl} text=\"Next\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-2 col-lg-1 order-3\"/>\n            </div>\n            <ShareBox url={location.href} hasCommentBox={false}/>\n        </>\n    );\n};\n\nexport default Page;\n"],"sourceRoot":""}