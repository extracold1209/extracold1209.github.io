{"version":3,"sources":["webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/ShareBox/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/api/images.js"],"names":["config","friends","Friend","className","map","friend","ExternalLink","href","title","key","rel","LatestPost","posts","node","to","frontmatter","url","slug","fields","Information","totalCount","defaultProps","wordings","githubUsername","email","iconUrl","about","Icon","icon","target","Sidebar","latestPosts","src","alt","query","render","data","all","limited","Tag","name","count","NavLinkText","color","text","style","NavLink","test","Page","pageContext","location","group","index","first","last","pathPrefix","previousUrl","nextUrl","marginTop","justifyContent","marginBottom","hasCommentBox","CommentButton","lineHeight","paddingLeft","onClick","ReactGA","event","category","action","ShareBox","CardHeader","headerImage","image","backgroundColor","backgroundImage","parseImgur","Card","date","headerBackgroundColor","description","tags","split","rawImage","size","match","resizedImage","replace","small","medium","large","huge","parseImageTag","parseTitle","module","exports","getGalleryImage"],"mappings":"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","file":"component---src-templates-index-js-0750e1c4217d6f1bb5e3.js","sourcesContent":["import React from 'react';\n\nimport ExternalLink from '../../ExternalLink';\n\nimport { config } from '../../../../data';\n\nimport './index.scss';\n\nconst { friends = [] } = config;\n\nconst Friend = () => (\n  <div className=\"friend\">\n    <p>Links</p>\n    {friends.map(friend => (\n      <ExternalLink\n        href={friend.href}\n        title={friend.title}\n        key={friend.title}\n        rel=\"noopener\"\n      />\n    ))}\n  </div>\n);\n\nexport default Friend;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>Recent Post</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      Total&nbsp;\n      {totalCount}\n      &nbsp;posts\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    <hr />\n    <Friend />\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { graphql, Link, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  email,\n  iconUrl,\n  about,\n} = config;\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-2x\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={iconUrl} alt=\"extracold1209\" />\n        <h4>ExtraCold</h4>\n      </Link>\n      <p className=\"mb-1\">{wordings[0]}</p>\n      <p className=\"mb-3\">{wordings[1]}</p>\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tag = ({ name, count }) => (\n  <a href={`/tag/${name}`} className=\"header-tag\">\n    {name}\n    &nbsp;\n    {count}\n  </a>\n);\n\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nTag.defaultProps = {\n  count: '',\n};\n\nexport default Tag;\n","/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport Link from 'gatsby-link';\n\nimport Card from '../components/Card';\nimport Sidebar from '../components/Sidebar';\nimport ShareBox from '../components/ShareBox';\n\nimport './index.scss';\n\nconst NavLinkText = ({ color, text }) => (\n  <div\n    className=\"navlink\"\n    style={{\n      color,\n    }}\n  >\n    {text}\n  </div>\n);\n\nconst NavLink = ({ test, url, text }) => {\n  if (!test) {\n    return <NavLinkText color=\"#7d7d7d\" text={text} />;\n  }\n\n  return (\n    <Link to={`${url}`}>\n      <NavLinkText color=\"#66ccff\" text={text} />\n    </Link>\n  );\n};\n\nconst Page = ({ pageContext, location }) => {\n  const {\n    group, index, first, last, pathPrefix,\n  } = pageContext;\n\n  const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\n  const nextUrl = `/${pathPrefix}/${index + 1}`;\n\n  return (\n    <>\n      <div\n        className=\"row homepage\"\n        style={{\n          marginTop: 20,\n        }}\n      >\n        <Sidebar />\n        <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\n          {group.map(({ node }) => (\n            <Card\n              url={node.frontmatter.slug ? node.frontmatter.slug : node.fields.slug}\n              key={node.fields.slug}\n              {...node.frontmatter}\n            />\n          ))}\n\n          <div\n            className=\"row\"\n            style={{\n              justifyContent: 'space-around',\n              marginBottom: '20px',\n            }}\n          >\n            <div className=\"previousLink\">\n              <NavLink test={!first} url={previousUrl} text=\"Previous\" />\n            </div>\n            <div className=\"nextLink\">\n              <NavLink test={!last} url={nextUrl} text=\"Next\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\n      </div>\n      <ShareBox url={location.href} hasCommentBox={false} />\n    </>\n  );\n};\n\nexport default Page;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './index.scss';\n\nconst CommentButton = () => (\n  <a\n    className=\"share-button\"\n    style={{\n      lineHeight: '1.7rem',\n      color: '#337ab7',\n      paddingLeft: '0.15rem',\n    }}\n    href=\"#gitalk-container\"\n    onClick={() =>\n      ReactGA.event({\n        category: 'User',\n        action: 'Goto Comment Box',\n      })\n    }\n  >\n    <FontAwesomeIcon icon={['far', 'comment']} />\n  </a>\n);\n\nconst ShareBox = ({ url, hasCommentBox }) => (\n  <div className=\"m-share-box\">\n    {/* 視覺置中 => 稍微往上偏移 */}\n    {hasCommentBox && <CommentButton />}\n\n    <a\n      className=\"share-button\"\n      href=\"#header\"\n      onClick={() => {\n        ReactGA.event({\n          category: 'User',\n          action: 'Scroll to Top',\n        });\n      }}\n      style={{\n        lineHeight: '1.7rem',\n        paddingLeft: '0.1rem',\n      }}\n    >\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\n    </a>\n  </div>\n);\n\nShareBox.propTypes = {\n  url: PropTypes.string.isRequired,\n  hasCommentBox: PropTypes.bool,\n};\n\nShareBox.defaultProps = {\n  hasCommentBox: true,\n};\n\nexport default ShareBox;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Tag from '../Tag';\n\nimport { parseImgur } from '../../api/images';\n\nimport './index.scss';\n\nconst imageStyle = (headerImage, color) => ({\n  backgroundColor: `#${color}`,\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\n});\n\nconst CardHeader = ({ url, image, backgroundColor }) => (\n  <Link to={url} href={url}>\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)}/>\n  </Link>\n);\n\nconst Card = ({\n  title,\n  date,\n  url,\n  headerImage,\n  headerBackgroundColor,\n  description,\n  tags = [],\n}) => (\n  <div className=\"col-sm-12 pb-4\">\n    <div className=\"custom-card\">\n      {headerImage && (\n        <CardHeader\n          url={url}\n          image={headerImage}\n          backgroundColor={headerBackgroundColor}\n        />\n      )}\n      <div className=\"data\">\n        <div className=\"content\">\n          <div className=\"stats\">\n            <span className=\"date\">{date.split('T')[0]}</span>\n            {tags.map(name => (\n              <Tag name={name} key={name}/>\n            ))}\n          </div>\n          <Link to={url} href={url}>\n            <h4 className=\"title\">{title}</h4>\n            <p>{description}</p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  url: PropTypes.string.isRequired,\n  headerImage: PropTypes.string,\n  headerBackgroundColor: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n};\n\nCardHeader.propTypes = Card.propTypes;\n\nCard.defaultProps = {\n  headerImage: '',\n  tags: [],\n  date: '',\n  headerBackgroundColor: '',\n};\n\nexport default Card;\n","// s = Small Square (90×90)\n// b = Big Square (160×160)\n// t = Small Thumbnail (160×160)\n// m = Medium Thumbnail (320×320)\n// l = Large Thumbnail (640×640)\n// h = Huge Thumbnail (1024×1024)\nconst defaultPicture = 'M795H8A.jpg';\n\nconst parseImgur = (rawImage, size = 'large') => {\n  if (!rawImage) {\n    return `https://i.imgur.com/${defaultPicture}`;\n  }\n\n  const mapping = {\n    'small-square': 's',\n    'big-square': 'b',\n    small: 't',\n    medium: 'm',\n    large: 'l',\n    huge: 'h',\n  };\n\n  // Don't resize the png image\n  // as there is a transparent bug in imgur\n  if (rawImage.match('(png)|(gif)')) {\n    // Prevent double http url\n    if (rawImage.match('http')) {\n      return rawImage;\n    }\n    return `https://i.imgur.com/${rawImage}`;\n  }\n\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\n  // Prevent double http url\n  if (resizedImage.match('http')) {\n    return resizedImage;\n  }\n  return `https://i.imgur.com/${resizedImage}`;\n};\n\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\n\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\n  href,\n  'large',\n)} ${parseTitle(title, text)} />`;\n\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\n  href,\n  'huge',\n)}\">${parseImageTag({ href, title, text })}</a>`;\n\nmodule.exports = {\n  parseImgur,\n  parseImageTag,\n  getGalleryImage,\n};\n"],"sourceRoot":""}