{"version":3,"sources":["webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/components/ShareBox/index.js","webpack:///./src/components/Card/index.tsx","webpack:///./src/templates/index.tsx"],"names":["config","friends","Friend","className","map","friend","ExternalLink","href","title","key","rel","LatestPost","posts","node","to","frontmatter","url","slug","fields","Information","totalCount","defaultProps","wordings","githubUsername","email","iconUrl","about","Icon","icon","target","Sidebar","latestPosts","src","alt","query","render","data","all","limited","Tag","name","count","CommentButton","style","lineHeight","color","paddingLeft","onClick","ReactGA","event","category","action","ShareBox","hasCommentBox","CardHeader","image","backgroundColor","backgroundSize","backgroundImage","Card","date","headerImage","headerBackgroundColor","description","tags","split","NavLinkText","text","NavLink","test","Page","pageContext","location","group","index","first","last","pathPrefix","previousUrl","nextUrl","marginTop","justifyContent","marginBottom"],"mappings":"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","file":"component---src-templates-index-tsx-3a19530e6d95fe8df454.js","sourcesContent":["import React from 'react';\n\nimport ExternalLink from '../../ExternalLink';\n\nimport { config } from '../../../../data';\n\nimport './index.scss';\n\nconst { friends = [] } = config;\n\nconst Friend = () => (\n  <div className=\"friend\">\n    <p>Links</p>\n    {friends.map(friend => (\n      <ExternalLink\n        href={friend.href}\n        title={friend.title}\n        key={friend.title}\n        rel=\"noopener\"\n      />\n    ))}\n  </div>\n);\n\nexport default Friend;\n","import React from 'react';\n\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst LatestPost = ({ posts }) => (\n  <div className=\"latest-post\">\n    <p>Recent Post</p>\n    {posts.map(({ node }) => (\n      <Link\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\n      >\n        {node.frontmatter.title}\n      </Link>\n    ))}\n  </div>\n);\n\nLatestPost.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\n// eslint-disable-next-line react/prop-types\nconst Information = ({ totalCount, posts }) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      Total&nbsp;\n      {totalCount}\n      &nbsp;posts\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    <hr />\n    <Friend />\n  </div>\n);\n\nInformation.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  posts: PropTypes.array,\n};\n\nInformation.defaultProps = {\n  posts: [],\n};\n\nexport default Information;\n","import React from 'react';\nimport { graphql, Link, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { config } from '../../../data';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  wordings = [],\n  githubUsername,\n  email,\n  iconUrl,\n  about,\n} = config;\n\nconst Icon = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-2x\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar = ({ totalCount, latestPosts }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} href={about} className=\"name\">\n        <img className=\"avatar\" src={iconUrl} alt=\"extracold1209\" />\n        <h4>ExtraCold</h4>\n      </Link>\n      <p className=\"mb-1\">{wordings[0]}</p>\n      <p className=\"mb-3\">{wordings[1]}</p>\n      <Icon\n        href={`https://github.com/${githubUsername}`}\n        icon={['fab', 'github']}\n      />\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nIcon.propTypes = {\n  href: PropTypes.string.isRequired,\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nSidebar.propTypes = {\n  totalCount: PropTypes.number,\n  latestPosts: PropTypes.array, //eslint-disable-line\n};\n\nSidebar.defaultProps = {\n  totalCount: 0,\n  latestPosts: [],\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          id\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { order: DESC, fields: frontmatter___date }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tag = ({ name, count }) => (\n  <a href={`/tag/${name}`} className=\"header-tag\">\n    {name}\n    &nbsp;\n    {count}\n  </a>\n);\n\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nTag.defaultProps = {\n  count: '',\n};\n\nexport default Tag;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './index.scss';\n\nconst CommentButton = () => (\n  <a\n    className=\"share-button\"\n    style={{\n      lineHeight: '1.7rem',\n      color: '#337ab7',\n      paddingLeft: '0.15rem',\n    }}\n    href=\"#gitalk-container\"\n    onClick={() =>\n      ReactGA.event({\n        category: 'User',\n        action: 'Goto Comment Box',\n      })\n    }\n  >\n    <FontAwesomeIcon icon={['far', 'comment']} />\n  </a>\n);\n\nconst ShareBox = ({ url, hasCommentBox }) => (\n  <div className=\"m-share-box\">\n    {/* 視覺置中 => 稍微往上偏移 */}\n    {hasCommentBox && <CommentButton />}\n\n    <a\n      className=\"share-button\"\n      href=\"#header\"\n      onClick={() => {\n        ReactGA.event({\n          category: 'User',\n          action: 'Scroll to Top',\n        });\n      }}\n      style={{\n        lineHeight: '1.7rem',\n        paddingLeft: '0.1rem',\n      }}\n    >\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\n    </a>\n  </div>\n);\n\nShareBox.propTypes = {\n  url: PropTypes.string.isRequired,\n  hasCommentBox: PropTypes.bool,\n};\n\nShareBox.defaultProps = {\n  hasCommentBox: true,\n};\n\nexport default ShareBox;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Tag from '../Tag';\n\nimport './index.scss';\n\ninterface IProps {\n  title: string;\n  date: string;\n  url: string\n  headerImage?: string\n  headerBackgroundColor?: string;\n  description?: string;\n  tags?: string[];\n}\n\nconst CardHeader: React.FC<{url: string, image: string; backgroundColor: string}> = ({ url, image, backgroundColor }) => (\n  <Link to={url}>\n    <div className=\"wrapper\" style={{\n      backgroundSize: 'cover',\n      backgroundColor: `#${backgroundColor}`,\n      backgroundImage: `url(${image})`,\n    }}/>\n  </Link>\n);\n\nconst Card: React.FC<IProps> = ({\n  title,\n  date,\n  url,\n  headerImage,\n  headerBackgroundColor,\n  description,\n  tags = [],\n}) => (\n  <div className=\"col-sm-12 pb-4\">\n    <div className=\"custom-card\">\n      {headerImage && (\n        <CardHeader\n          url={url}\n          image={headerImage}\n          backgroundColor={headerBackgroundColor || 'FFFFFF'}\n        />\n      )}\n      <div className=\"data\">\n        <div className=\"content\">\n          <div className=\"stats\">\n            <span className=\"date\">{date.split('T')[0]}</span>\n            {tags.map((name: string) => (\n              <Tag name={name} key={name}/>\n            ))}\n          </div>\n          <Link to={url}>\n            <h4 className=\"title\">{title}</h4>\n            <p>{description}</p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Link from 'gatsby-link';\n\nimport Card from '../components/Card';\nimport Sidebar from '../components/Sidebar';\nimport ShareBox from '../components/ShareBox';\n\nimport './index.scss';\n\nconst NavLinkText: React.FC<{ color: string; text: string }> = ({ color, text }) => (\n    <div\n        className=\"navlink\"\n        style={{\n            color,\n        }}\n    >\n        {text}\n    </div>\n);\n\nconst NavLink: React.FC<{ test: boolean; url: string; text: string }> = ({ test, url, text }) => {\n    if (!test) {\n        return <NavLinkText color=\"#7d7d7d\" text={text}/>;\n    }\n\n    return (\n        <Link to={`${url}`}>\n            <NavLinkText color=\"#66ccff\" text={text}/>\n        </Link>\n    );\n};\n\nconst Page: React.FC<{ pageContext: any; location: Location }> = ({ pageContext, location }) => {\n    const {\n        group, index, first, last, pathPrefix,\n    } = pageContext;\n\n    const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\n    const nextUrl = `/${pathPrefix}/${index + 1}`;\n\n    return (\n        <>\n            <div\n                className=\"row homepage\"\n                style={{\n                    marginTop: 20,\n                }}\n            >\n                <Sidebar/>\n                <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\n                    {group.map(({ node }: { node: any }) => (\n                        <Card\n                            url={node.frontmatter.slug ? node.frontmatter.slug : node.fields.slug}\n                            key={node.fields.slug}\n                            {...node.frontmatter}\n                        />\n                    ))}\n\n                    <div\n                        className=\"row\"\n                        style={{\n                            justifyContent: 'space-around',\n                            marginBottom: '20px',\n                        }}\n                    >\n                        <div className=\"previousLink\">\n                            <NavLink test={!first} url={previousUrl} text=\"Previous\"/>\n                        </div>\n                        <div className=\"nextLink\">\n                            <NavLink test={!last} url={nextUrl} text=\"Next\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-2 col-lg-1 order-3\"/>\n            </div>\n            <ShareBox url={location.href} hasCommentBox={false}/>\n        </>\n    );\n};\n\nexport default Page;\n"],"sourceRoot":""}