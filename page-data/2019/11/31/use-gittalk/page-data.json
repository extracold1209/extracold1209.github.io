{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/2019/11/31/use-gittalk","result":{"data":{"content":{"edges":[{"node":{"id":"c3d9a242-67c1-527e-b83b-14ad513f3ddd","html":"<p>게시판 기반 서비스에는 웬만해선 댓글기능이 있는게 좋다.</p>\n<p>업무로 운영하는 Docs 에서는 해당 기능 제공을 위해 <a href=\"https://disqus.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">disqus</a> 를 사용한다.\ndisqus 는 상용서비스지만 무료로도 충분히 사용할만 하다.</p>\n<p>disqus 는 댓글 대시보드도 제공하고, 댓글에 대해 관리자의 승인이 있기 전까지는 안보여주거나 할수도 있다.</p>\n<p>기능이 강력해서 좋긴한데.. 기본적인 기능만 사용하기엔 오히려 불편한 점도 많았다.<br>\n일례로, 댓글을 관리자가 일정시간 허용을 안하면.. 댓글이 삭제된다.</p>\n<p>뭐 사실 주구장창 얘기는 했는데 그냥 블로그 템플릿에서 gitalk 라는 라이브러리를 쓰길래 그대로 썼는데,\n생각보다 깔끔하고 동작방식도 편해서 사용방법을 적어둔다.</p>\n<hr>\n<h1 id=\"gitalk-란\"><a href=\"#gitalk-%EB%9E%80\" aria-label=\"gitalk 란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gitalk 란?</h1>\n<p><img src=\"/images/gitalk_1.png\" alt=\"gitalk_1\"></p>\n<p>preact 베이스, 데이터저장은 github issue 를 활용한 라이브러리이다.</p>\n<p>스타가 3.8k 나 있는거보면 오지게 유명한 라이브러리가 아닐까? 싶었는데,<br>\n검색해도 뭐가 안나온다.. 이슈가 거의다 중국어인거 보니까 중국산(?) 라이브러리 인 것 같다.</p>\n<p>그런데, github issue 베이스 데이터저장이 대체 뭔가 싶다.</p>\n<p>지금 이 블로그 보면 아래 댓글란이 이렇게 생겨먹었다.</p>\n<p><img src=\"/images/gitalk_2.png\" alt=\"gitalk_2\"></p>\n<p>이게 gitalk 인데, 이 데이터들은 실제로는 github.io 블로그에 이슈로서 등록되어있다.</p>\n<p><img src=\"/images/gitalk_3.png\" alt=\"gitalk_3\"></p>\n<p>이렇게 말이다. 이 태그를 id 로, 이슈의 코멘트를 댓글로서 활용하고 있다.<br>\n관리및 댓글 확인을 github 기능을 통해 수행하니 엄청 편한 것 같다.</p>\n<h1 id=\"적용방법\"><a href=\"#%EC%A0%81%EC%9A%A9%EB%B0%A9%EB%B2%95\" aria-label=\"적용방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>적용방법</h1>\n<h2 id=\"oauth-apps-생성하기\"><a href=\"#oauth-apps-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"oauth apps 생성하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OAuth Apps 생성하기</h2>\n<p>github 의 이슈를 활용하기 위해서 gitalk 는 OAuth 기능을 사용해야한다.</p>\n<ul>\n<li><a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크 - Github OAuth Application 생성</a> 혹은 깃헙 세팅 -> Developer Settings -> OAuth Apps -> New OAuth App 을 클릭하자</li>\n</ul>\n<p><img src=\"/images/gitalk_4.png\" alt=\"gitalk_4\"></p>\n<ul>\n<li>위와 같이 세팅하기</li>\n<li>생성하기</li>\n</ul>\n<p>생성한 후 OAuth Apps 에 생성된 개체를 클릭하면, <code class=\"language-text\">Client ID</code>, <code class=\"language-text\">Client Secret</code> 이 만들어져 있다. 이걸 사용해야 한다.</p>\n<h2 id=\"gitalk-적용하기\"><a href=\"#gitalk-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"gitalk 적용하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gitalk 적용하기</h2>\n<p><a href=\"https://github.com/gitalk/gitalk#usage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고 - gitalk README</a></p>\n<p>아까 만들어진 ID, Secret 값을 넣으면 된다.\n여기서 입력한 id (기본값은 location.path) 에 따라 이슈에 label 이 달리고, 해당 페이지에서의 gitalk 는 그 이슈의 코멘트를 읽어와서 보여주는 형식이라고 보면 된다.</p>\n<p>매 페이지 별로 주소가 다르기 때문에 그에 맞는 다른 이슈에서 코멘트를 읽어온다.\n만약 이슈가 없다면 자동으로 이슈를 생성해주기도 한다. (단, admin 으로 등록된 유저가 로그인하여 해당 페이지를 확인할 때 생성됨)</p>\n<hr>\n<p>간단한 것 같으면서도 관리도 쉬운 gitalk.<br>\n굳이 github 블로그가 아니어도 도입하기 쉬워보이니까 간단한 코멘트 기능 구현은 이 라이브러리로 만들어도 좋을 것 같다.</p>\n<p>끗-</p>","excerpt":"게시판 기반 서비스에는 웬만해선 댓글기능이 있는게 좋다. 업무로 운영하는 Docs 에서는 해당 기능 제공을 위해 disqus 를 사용한다.\ndisqus 는 상용서비스지만 무료로도 충분히 사용할만 하다. disqus…","fields":{"slug":"/2019/11/31/use-gittalk"},"frontmatter":{"id":"fa1f5110-2bdb-11ea-93f4-1b7c262eedc0","title":"github 블로그에 gitalk 로 코멘트 기능 적용하기","slug":"/2019/11/31/use-gittalk","date":"2019-12-31T14:43:58.235Z","headerImage":""}},"previous":null,"next":null}]}},"pageContext":{"id":"c3d9a242-67c1-527e-b83b-14ad513f3ddd","index":0}}}